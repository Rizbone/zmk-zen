
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


// ZMK Zen


// ------- WIN -------------------


#define wCHAR 0
#define wNR 1
#define wNRhard 2
#define wLCHAR 3

#define wNAV 4
#define wSNAV 5

#define wPRG 6
#define wSPRG 7

#define wFUNC 8
#define wSFUNC 9
#define wAlter 10
#define wGUI 11

#define wSYM 12
#define wSSYM 13

#define wSShift 14
#define wSSShift 15

// ------- MAC -------------------

#define mCHAR 16
#define mNR 17
#define mNRhard 18
#define mLCHAR 19

#define mNAV 20
#define mSNAV 21

#define mPRG 22
#define mSPRG 23

#define mFUNC 24
#define mSFUNC 25
#define mAlter 26
#define mGUI 27

#define mSYM 28
#define mSSYM 29

#define mSShift 30
#define mSSShift 31




/ {

    behaviors 
	{


		// ---------------------- Windows ------------------------------------------

		// Tap Dance Number
		wMdNr: tap_dance_wMdNr 
		{
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_wMdNr";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&to wNR>, <&to wNRhard>;
        };

		//Tab Dance Shift
		wMdLs: tap_dance_wMdLs 
		{
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_wMdLs";
            #binding-cells = <0>;
            tapping-term-ms = <1000>;
            bindings = <&sl wLCHAR>, <&to wLCHAR>;
        };
		wMdRs: tap_dance_wMdRs 
		{
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_wMdRs";
            #binding-cells = <0>;
            tapping-term-ms = <1000>;
            bindings = <&sl wLCHAR>, <&to wLCHAR>;
        };


		// ---------------------- MAC ------------------------------------------

			// Tap Dance Number
		mMdNr: tap_dance_mMdNr 
		{
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_mMdNr";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&to mNR>, <&to mNRhard>;
        };

		//Tab Dance Shift
		mMdLs: tap_dance_mMdLs 
		{
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_mMdLs";
            #binding-cells = <0>;
            tapping-term-ms = <1000>;
            bindings = <&sl mLCHAR>, <&to mLCHAR>;
        };
		mMdRs: tap_dance_mMdRs 
		{
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_mMdRs";
            #binding-cells = <0>;
            tapping-term-ms = <1000>;
            bindings = <&sl mLCHAR>, <&to mLCHAR>;
        };



    };

	





	macros 
	{

		// ----- OS Switch ---------

		turnOnMac: turnOnMac {
            label = "turnOnMac";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&kp LC(LG(LA(ESC)))>
				, <&to mCHAR>
                ;
    	};

		turnOnWin: turnOnWin {
            label = "turnOnWin";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&kp LC(LG(LA(RIGHT)))>
                , <&to wCHAR>
                ;
    	};



		// ---------------------- Windows ------------------------------------------

		//Reset Keys
        wSpaceReset: wSpaceReset 
		{
            label = "wSpaceReset";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to wCHAR>
                , <&kp SPACE>
                ;
    	};
		wEnterReset: wEnterReset 
		{
            label = "wEnterReset";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to wCHAR>
                , <&kp ENTER>
                ;
    	};
		wShiftReset: wShiftReset
		{
            label = "wShiftReset";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to wCHAR>
                , <&macro_press &sl wLCHAR>
    			, <&macro_pause_for_release>
				, <&macro_release &sl wLCHAR>
                ;
    	};



		//Reset Daumen

		wNrReset: wNrReset
		{
            label = "wNrReset";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to wCHAR>
                , <&macro_press &sl wNR>
    			, <&macro_pause_for_release>
				, <&macro_release &sl wNR>
				;
    	};

				
		wNavReset: wNavReset 
		{
            label = "wNavReset";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to wCHAR>
                , <&macro_press &sl wNAV>
    			, <&macro_pause_for_release>
				, <&macro_release &sl wNAV>
                ;
    	};

		wPrgReset: wPrgReset 
		{
            label = "wPrgReset";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to wCHAR>
                , <&macro_press &sl wPRG>
    			, <&macro_pause_for_release>
				, <&macro_release &sl wPRG>
                ;
    	};

		wFuncReset: wFuncReset
		{
            label = "wFuncReset";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to wCHAR>
                , <&macro_press &sl wFUNC>
    			, <&macro_pause_for_release>
				, <&macro_release &sl wFUNC>
                ;
    	};

		wSymReset: wSymReset
		{
            label = "wSymReset";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to wCHAR>
                , <&macro_press &sl wSYM>
    			, <&macro_pause_for_release>
				, <&macro_release &sl wSYM>
                ;
    	};



		wAlterReset: wAlterReset
		{
            label = "wAlterReset";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to wCHAR>
                , <&macro_press &sl wAlter>
    			, <&macro_pause_for_release>
				, <&macro_release &sl wAlter>
                ;
    	};


		wModSCtlReset: wModSCtlReset
		{
            label = "wModSCtlReset";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to wCHAR>
                , <&macro_press &sk LS(LCTL)>
    			, <&macro_pause_for_release>
				, <&macro_release &sk LS(LCTL)>
                ;
    	};


		wModAltReset: wModAltReset
		{
            label = "wModAltReset";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to wCHAR>
                , <&macro_press &sk LALT>
    			, <&macro_pause_for_release>
				, <&macro_release &sk LALT>
                ;
    	};

		wModGuiReset: wModGuiReset 
		{
            label = "wModGuiReset";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to wCHAR>
                , <&macro_press &sk LGUI>
    			, <&macro_pause_for_release>
				, <&macro_release &sk LGUI>
                ;
    	};


		// specials

		wAltShot: wAltShot {
            label = "wAltShot";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
				, <&macro_release  &kp LALT>
                ;
    	};


		// Window

		wWinLeft: wWinLeft {
            label = "wWinLeft";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
				, <&macro_tap &kp LEFT>
				, <&macro_wait_time 250>
				, <&macro_release  &kp LGUI>
                ; 
    	};

		wWinRight: wWinRight {
            label = "wWinRight";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
				, <&macro_tap &kp RIGHT>
				, <&macro_wait_time 250>
				, <&macro_release  &kp LGUI>
                ; 
    	};

		wWinUp: wWinUp {
            label = "wWinUp";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
				, <&macro_tap &kp UP>
				, <&macro_wait_time 250>
				, <&macro_release  &kp LGUI>
                ; 
    	};

		wWinDown: wWinDown {
            label = "wWinDown";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
				, <&macro_tap &kp DOWN>
				, <&macro_wait_time 250>
				, <&macro_release  &kp LGUI>
                ; 
    	};

		wDoubleTab: wDoubleTab {
            label = "wDoubleTab";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
				, <&macro_wait_time 100>
				, <&macro_tap &kp TAB>
				, <&macro_wait_time 100>
				, <&macro_tap &kp TAB>
				, <&macro_wait_time 100>
				, <&macro_release  &kp LALT>
                ; 
    	};



		// Reset

		wReset: wReset {
            label = "wReset";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
				= <&to wCHAR>
				, <&kp LC(LG(LA(NUBS)))>
				, <&macro_release  &kp LGUI>
				, <&macro_release  &kp LCTL>
				, <&macro_release  &kp LSHFT>
				, <&macro_release  &kp LALT>
                ; 
    	};



		// ---------------------- MAC ------------------------------------------


		//Reset Keys
        mSpaceReset: mSpaceReset 
		{
            label = "mSpaceReset";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to mCHAR>
                , <&kp SPACE>
                ;
    	};
		mEnterReset: mEnterReset 
		{
            label = "mEnterReset";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to mCHAR>
                , <&kp ENTER>
                ;
    	};
		wShiftReset: wShiftReset
		{
            label = "mShiftReset";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to mCHAR>
                , <&macro_press &sl mLCHAR>
    			, <&macro_pause_for_release>
				, <&macro_release &sl mLCHAR>
                ;
    	};



		//Reset Daumen

		mNrReset: mNrReset
		{
            label = "mNrReset";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to mCHAR>
                , <&macro_press &sl mNR>
    			, <&macro_pause_for_release>
				, <&macro_release &sl mNR>
				;
    	};

				
		mNavReset: mNavReset 
		{
            label = "mNavReset";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to mCHAR>
                , <&macro_press &sl mNAV>
    			, <&macro_pause_for_release>
				, <&macro_release &sl mNAV>
                ;
    	};

		mPrgReset: mPrgReset 
		{
            label = "mPrgReset";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to mCHAR>
                , <&macro_press &sl mPRG>
    			, <&macro_pause_for_release>
				, <&macro_release &sl mPRG>
                ;
    	};

		mFuncReset: mFuncReset
		{
            label = "mFuncReset";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to mCHAR>
                , <&macro_press &sl mFUNC>
    			, <&macro_pause_for_release>
				, <&macro_release &sl mFUNC>
                ;
    	};

		mSymReset: mSymReset
		{
            label = "mSymReset";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to mCHAR>
                , <&macro_press &sl mSYM>
    			, <&macro_pause_for_release>
				, <&macro_release &sl mSYM>
                ;
    	};



		mAlterReset: mAlterReset
		{
            label = "mAlterReset";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to mCHAR>
                , <&macro_press &sl mAlter>
    			, <&macro_pause_for_release>
				, <&macro_release &sl mAlter>
                ;
    	};


		mModSCtlReset: mModSCtlReset
		{
            label = "mModSCtlReset";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to mCHAR>
                , <&macro_press &sk LS(LCTL)>
    			, <&macro_pause_for_release>
				, <&macro_release &sk LS(LCTL)>
                ;
    	};


		mModAltReset: mModAltReset
		{
            label = "mModAltReset";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to mCHAR>
                , <&macro_press &sk LALT>
    			, <&macro_pause_for_release>
				, <&macro_release &sk LALT>
                ;
    	};

		mModGuiReset: mModGuiReset 
		{
            label = "mModGuiReset";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to mCHAR>
                , <&macro_press &sk LGUI>
    			, <&macro_pause_for_release>
				, <&macro_release &sk LGUI>
                ;
    	};



		// Reset

		mReset: mReset {
            label = "mReset";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
				= <&to mCHAR>
				, <&kp LC(LG(LA(NUBS)))>
				, <&macro_release  &kp LGUI>
				, <&macro_release  &kp LCTL>
				, <&macro_release  &kp LSHFT>
				, <&macro_release  &kp LALT>
                ; 
    	};

	};





	keymap
	{	
		compatible = "zmk,keymap";



		// -----------------------------------    WIN  -----------------------------------------------------------------------|

		// -----------------------------------------------------|
		// Layer 0 - mChar = 	  Buchstaben					|
		// -----------------------------------------------------|
	
		win_buchstaben
		{
			label = "win";

			bindings = <

				// ----------------------------------------

				&kp ESC
				&kp J 
				&kp D	 
				&kp U
				&kp A
				&kp X

				&kp P
				&kp H
				&kp L
				&kp M
				&kp W
				&kp BSPC

				// ----------------------------------------
	
				&sl wSShift
				&kp C
				&kp T
				&kp I
				&kp E
				&kp O

				&kp B
				&kp N
				&kp R
				&kp S
				&kp G
				&kp RET

				// ----------------------------------------
	
				&wMdLs
				&kp F
				&kp V
				&kp MINUS
				&kp Y
				&kp Q

				&kp Z
				&kp SEMI
				&kp LBKT
				&kp SQT
				&kp K
				&wMdRs

				// ----------------------------------------

				&sl wSYM
				&kp SPACE
				&sl wFUNC
				&sl wPRG 
				&sl wNAV
				&wMdNr

				// ----------------------------------------
			>;
		};





	};
};



