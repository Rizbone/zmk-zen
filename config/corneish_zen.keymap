
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


// ZMK Zen



// ------- MAC -------------------

#define mCHAR 0
#define mNR 1
#define mNRhard 2
#define mLCHAR 3

#define mNAV 4
#define mSNAV 5

#define mPRG 6
#define mSPRG 7

#define mFUNC 8
#define mSFUNC 9

#define mGUI 10
#define mOGUI 11

#define mSYM 12
#define mSSYM 13

#define mSShift 14
#define mSSShift 15




/ {

    behaviors 
	{

		// Tap Dance Number
		mMdNr: tap_dance_mMdNr 
		{
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_mMdNr";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&to mNR>, <&to mNRhard>;
        };

		//Tab Dance Shift
		mMdLs: tap_dance_mMdLs 
		{
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_mMdLs";
            #binding-cells = <0>;
            tapping-term-ms = <1000>;
            bindings = <&sl mLCHAR>, <&to mLCHAR>;
        };
		mMdRs: tap_dance_mMdRs 
		{
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_mMdRs";
            #binding-cells = <0>;
            tapping-term-ms = <1000>;
            bindings = <&sl mLCHAR>, <&to mLCHAR>;
        };
    };

	


	macros 
	{

		//Reset Keys
        mSpaceReset: mSpaceReset 
		{
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to mCHAR>
                , <&kp SPACE>
                ;
    	};
		mEnterReset: mEnterReset 
		{
            label = "mEnterReset";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to mCHAR>
                , <&kp ENTER>
                ;
    	};
		mShiftReset: mShiftReset
		{
            label = "mShiftReset";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to mCHAR>
                , <&macro_press &sl mLCHAR>
    			, <&macro_pause_for_release>
				, <&macro_release &sl mLCHAR>
                ;
    	};



		//Reset Daumen

		mNrReset: mNrReset
		{
            label = "mNrReset";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to mCHAR>
                , <&macro_press &sl mNR>
    			, <&macro_pause_for_release>
				, <&macro_release &sl mNR>
				;
    	};

				
		mNavReset: mNavReset 
		{
            label = "mNavReset";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to mCHAR>
                , <&macro_press &sl mNAV>
    			, <&macro_pause_for_release>
				, <&macro_release &sl mNAV>
                ;
    	};

		mPrgReset: mPrgReset 
		{
            label = "mPrgReset";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to mCHAR>
                , <&macro_press &sl mPRG>
    			, <&macro_pause_for_release>
				, <&macro_release &sl mPRG>
                ;
    	};

		mFuncReset: mFuncReset
		{
            label = "mFuncReset";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to mCHAR>
                , <&macro_press &sl mFUNC>
    			, <&macro_pause_for_release>
				, <&macro_release &sl mFUNC>
                ;
    	};

		mSymReset: mSymReset
		{
            label = "mSymReset";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to mCHAR>
                , <&macro_press &sl mSYM>
    			, <&macro_pause_for_release>
				, <&macro_release &sl mSYM>
                ;
    	};


		mModSGuiReset: mModSGuiReset
		{
            label = "mModSGuiReset";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to mCHAR>
                , <&macro_press &sk LS(LGUI)>
    			, <&macro_pause_for_release>
				, <&macro_release &sk LS(LGUI)>
                ;
    	};


		mModCtlReset: mModCtlReset
		{
            label = "mModCtlReset";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to mCHAR>
                , <&macro_press &sk LCTL>
    			, <&macro_pause_for_release>
				, <&macro_release &sk LCTL>
                ;
    	};

		mModGuiReset: mModGuiReset 
		{
            label = "mModGuiReset";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to mCHAR>
                , <&macro_press &sk LGUI>
    			, <&macro_pause_for_release>
				, <&macro_release &sk LGUI>
                ;
    	};



		// Reset

		mReset: mReset {
            label = "mReset";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
				= <&to mCHAR>
				, <&kp LC(LG(LA(NUBS)))>
				, <&macro_release  &kp LGUI>
				, <&macro_release  &kp LCTL>
				, <&macro_release  &kp LSHFT>
				, <&macro_release  &kp LALT>
                ; 
    	};

	};





	keymap
	{	
		compatible = "zmk,keymap";


		// -----------------------------------------------------|
		// Layer 0 - mChar = 	  Buchstaben					|
		// -----------------------------------------------------|
	
		mac_buchstaben
		{
			label = "mac";

			bindings = <

				// ----------------------------------------

				&kp ESC
				&kp J 
				&kp D	 
				&kp U
				&kp A
				&kp X

				&kp P
				&kp H
				&kp L
				&kp M
				&kp W
				&kp BSPC

				// ----------------------------------------
	
				&sl mSShift
				&kp C
				&kp T
				&kp I
				&kp E
				&kp O

				&kp B
				&kp N
				&kp R
				&kp S
				&kp G
				&kp RET

				// ----------------------------------------
	
				&mMdLs
				&kp F
				&kp V
				&kp MINUS
				&kp Y
				&kp Q

				&kp Z
				&kp SEMI
				&kp LBKT
				&kp SQT
				&kp K
				&mMdRs

				// ----------------------------------------

				&sl mSYM
				&kp SPACE
				&sl mFUNC
				&sl mPRG 
				&sl mNAV
				&mMdNr

				// ----------------------------------------
			>;
		};




	};
};


